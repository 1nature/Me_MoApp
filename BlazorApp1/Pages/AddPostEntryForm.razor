@page "/postentryform"
@using BlazorApp1.Data
@using Me_MoApp
@inject UserDataService uds
@inject PostDataService pds

@using System
@using System.IO
@using Microsoft.AspNetCore.Hosting
@inject IWebHostEnvironment Environment

<PageTitle>PostInputInterface</PageTitle>

<h3>Post Entry Form</h3>

<EditForm Model="Post" OnSubmit="OnSubmit">
    <div class="card mx-auto" style="width: 40rem;">
        <div class="col-md-4">
            <label for="picture" class="form-label">Picture</label>
            <InputFile OnChange="LoadFiles" />
        </div>

        <div class="col-md-4">
            <label for="description" class="form-label">Description</label>
            <InputText @bind-Value="Post.Description"></InputText>
        </div>


        @*   <InputNumber @bind-Value="Post.Categorization"></InputNumber>  *@
        @* <InputNumber @bind-Value="Post.Votes"></InputNumber> *@
        <br />
        <button type="submit" class="col-md-2 md-start">Send</button>

    </div>
</EditForm>

@* <PageTitle>File Upload 1</PageTitle>

<h1>File Upload Example 1</h1>

<p>
    <label>
        Max file size:
        <input type="number" @bind="maxFileSize" />
    </label>
</p> *@

@* <p>
    <label>
        Max allowed files:
        <input type="number" @bind="maxAllowedFiles" />
    </label>
</p> *@

@* <p>
    <label>
        Upload up to @maxAllowedFiles of up to @maxFileSize bytes:
        <InputFile OnChange="LoadFiles" multiple />
    </label>
</p> *@

@* @if (isLoading)
{
    <p>Uploading...</p>
}
else
{
    <ul>
        @foreach (var file in loadedFiles)
        {
            <li>
                <ul>
                    <li>Name: @file.Name</li>
                    <li>Last modified: @file.LastModified.ToString()</li>
                    <li>Size (bytes): @file.Size</li>
                    <li>Content type: @file.ContentType</li>
                </ul>
            </li>
        }
    </ul>
} *@



@code {
    private List<IBrowserFile> loadedFiles = new();
    private long maxFileSize = 1024 * 15000;
    private int maxAllowedFiles = 3;
    private bool isLoading;

    public Post Post { get; set; } = new();

    void OnSubmit()
    {
        Post.TimeStamp = DateTime.Now;
        Post.User = uds.GetUsers()[0]; //to stand in for the logged user

        pds.Posts.Add(Post);
    }

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        isLoading = true;
        loadedFiles.Clear();

        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            try
            {
                var trustedFileName = Path.GetRandomFileName() + "." + Path.GetExtension(file.Name); //TODO: probalby generate random name but keep original file extension
                var rootPath = Environment.ContentRootPath;
                var imageFolderPath = "wwwroot\\images";
                var path = Path.Combine(rootPath, imageFolderPath);
                path = Path.Combine(path, trustedFileName);

                await using FileStream fs = new(path, FileMode.Create);
                await file.OpenReadStream(maxFileSize).CopyToAsync(fs);

                loadedFiles.Add(file);

                if (Post.Path == null)
                {
                    Post.Path = path;
                }

            }
            catch (Exception ex)
            {
                ;
            }
        }

        isLoading = false;
    }
}

@* need to refix the file upload *@
@* at what point do I serialize *@
