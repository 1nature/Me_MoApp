@page "/votedisplay"  
@using Me_MoApp  

<div class="card-body mt-2" style="width: 13rem;">  
    <h5 class="card-title">Rate the Picture</h5>  
    <div class="card-footer text-muted">  
        <button class="btn btn-outline-primary" @onclick="UpdateVoteValue">  
            Like  
        </button>  

        <button class="btn btn-outline-danger" @onclick="DownVoteValue">  
            Dislike  
        </button>  
    </div>  

    <p class="text-capitalize">@Post.TotalVotesOnEachPost</p>  
    <p class="text-capitalize">@Validate.SumTheTotalVotesInAllPosts</p>


</div>  

@code {  
    [Parameter]  
    public Post Post { get; set; } = new();  

    [Parameter]  
    public Validate Validate { get; set; } = new();  

    [Parameter]  
    public EventCallback<Post> PostChanged { get; set; }  

    [Parameter]
    public EventCallback<Validate> ValidateChanged { get; set; }

    [Parameter]  
    public string Text { get; set; } = "No Text";  

    async Task UpdateVoteValue()  
    {     
        Post.UpVoteOnPost();  
        await PostChanged.InvokeAsync(Post);  
    }  

    async Task DownVoteValue()  
    {  
        Post.DownVoteOnPost();  
        await PostChanged.InvokeAsync(Post);  
    }  

    async Task ValidateTotalVote()  
    {  
        // Fixed the issue by ensuring the correct type is passed to PostChanged.  
        var totalVotes = Validate.SumTheTotalVotesInAllPosts;  
        await ValidateChanged.InvokeAsync(Validate);  
    }  
}
